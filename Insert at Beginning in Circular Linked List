class CLLNode:
    def __init__(self, data):
        self.data = data
        self.next = None

def insertEndCLL(head, data):
    new_node = CLLNode(data)
    if not head:
        new_node.next = new_node
        return new_node
    temp = head
    while temp.next != head:
        temp = temp.next
    temp.next = new_node
    new_node.next = head
    return head

def insertAtBeginningCLL(head, key):
    new_node = CLLNode(key)
    if not head:
        new_node.next = new_node
        return new_node
    temp = head
    while temp.next != head:
        temp = temp.next
    temp.next = new_node
    new_node.next = head
    return new_node

def printCLL(head):
    if not head:
        return
    temp = head
    while True:
        print(temp.data, end=" ")
        temp = temp.next
        if temp == head:
            break
    print("-> (head)")

head = None
for val in [1, 7, 8, 10]:
    head = insertEndCLL(head, val)
print("Original CLL:", end=" ")
printCLL(head)
head = insertAtBeginningCLL(head, 5)
print("After Insert Beginning:", end=" ")
printCLL(head)
